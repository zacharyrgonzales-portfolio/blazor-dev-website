<section class="light" id="education">
    <h2>Education</h2>
    <div class="education-container">
    @if (certificates is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container">
            @foreach (var certificate in certificates)
            {
                <div class="box" key="@certificate.Title">
                    <a href="@certificate.Url" target="_blank" rel="noopener noreferrer">
                        <h3 style="flex-basis: 40px;">@certificate.Title</h3>
                    </a>
                    <p class="small">@certificate.Description</p>
                </div>
            }
        </div>
        <div class="education-hero">
            @if (hero is not null)
            {
                <img src="@(hero.Src)" style="height: 90%; width: 100%; object-fit: cover; animation: 3s ease-out 0s 1 slideInRight;" alt="@(hero.Alt)" />            
            }
        </div>
    }
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private List<Certificate>? certificates;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        certificates = await Http.GetFromJsonAsync<List<Certificate>>("sample-data/certificates.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "education");
    }
}
